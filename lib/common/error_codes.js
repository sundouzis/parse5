'use strict';

module.exports = {
    controlCharacterInInputStream: 'control-character-in-input-stream',
    undefinedCharacterInInputStream: 'undefined-character-in-input-stream',
    nonUnicodeCharacterInInputStream: 'non-unicode-character-in-input-stream',
    selfClosingNonVoidHtmlElement: 'self-closing-non-void-html-element',
    endTagWithAttributes: 'end-tag-with-attributes',
    selfClosingEndTag: 'self-closing-end-tag',
    abruptionOfTagSelfClosure: 'abruption-of-tag-self-closure',
    unexpectedNullCharacter: 'unexpected-null-character',
    startOfProcessingInstructionOrXMLDeclaration: 'start-of-processing-instruction-or-xml-declaration',
    invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',
    unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',
    missingEndTagName: 'missing-end-tag-name',
    unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',
    unknownNamedCharacterReference: 'unknown-named-character-reference',
    missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',
    unexpectedCharacterInAttributeValue: 'unexpected-character-in-attribute-value',
    eofBeforeTagName: 'eof-before-tag-name',
    eofInTag: 'eof-in-tag',
    missingAttributeValue: 'missing-attribute-value',
    missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',
    unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',
    cdataInHtmlContent: 'cdata-in-html-content',
    malformedComment: 'malformed-comment',
    eofInScriptHtmlComment: 'eof-in-script-html-comment',
    nestedComment: 'nested-comment',
    abruptClosingOfComment: 'abrupt-closing-of-comment',
    eofInComment: 'eof-in-comment',
    incorrectlyClosedComment: 'incorrectly-closed-comment',
    eofInCdata: 'eof-in-cdata',
    absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',
    nullCharacterReference: 'null-character-reference',
    nonUnicodeCharacterReference: 'non-unicode-character-reference',
    controlCharacterReference: 'control-or-undefined-character-reference',
    undefinedCharacterReference: 'undefined-character-reference',
    eofInDoctype: 'eof-in-doctype',
    missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',
    missingDoctypeName: 'missing-doctype-name',
    invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name'
};
